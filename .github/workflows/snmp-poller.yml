name: SNMP Poller CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 mypy

    - name: Install and start snmpsim
      run: |
        pip install snmpsim
        # Create a basic SNMP record file
        mkdir -p data
        echo ".1.3.6.1.2.1.1.1.0|4|Linux test" > data/public.snmprec
        # Start snmpsim in background
        snmpsimd.py --data-dir=./data --agent-udpv4-endpoint=127.0.0.1:1161 &
        sleep 5  # Wait for snmpsim to start

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Type checking with mypy
      run: |
        mypy snmp_poller.py --ignore-missing-imports

    - name: Run tests
      env:
        SNMP_TARGET: "127.0.0.1"
        SNMP_PORT: "1161"
        SNMP_COMMUNITY: "public"
        OIDS: "1.3.6.1.2.1.1.1.0"
        POLL_INTERVAL: "5"
        API_ENDPOINT: "http://example.com/api"  # Mock endpoint for testing
      run: |
        pytest tests/ --cov=. --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Build deployment package
      run: |
        zip -r deployment.zip . -x "*.git*" -x "tests/*" -x "*.pytest_cache*" -x "*.mypy_cache*"

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v3
      with:
        name: deployment-package
        path: deployment.zip 